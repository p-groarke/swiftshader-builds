name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

# env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # BUILD_TYPE: Release, Debug

jobs:
  MSVC:
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        build_type: [Release, Debug]
        build_arch: [x64, Win32]
        config:
          - { toolset_ver: "v143" }
          - { toolset_ver: "v142" }

    steps:
      - name: Git Line Endings
        run: |
          git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'google/swiftshader'
          ref: '7f4d495c89c200c1945cce5995d348dd41dadb5a'
          # ref: ${{ github.ref_name }}

      - name: Configure
        run: |
          cd ${{ github.workspace }}
          ls
          cd build
          cmake ..

      - name: Build
        run: |
          cd ${{ github.workspace }}/build
          cmake --build . --parallel

      - name: Test
        run: |
          cd ${{ github.workspace }}/build
          ./vk-unittests

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')

    # - name: Install Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.7'
    #     architecture: 'x64' # optional, x86

    # - name: Install Conan
    #   run: |
    #     python --version
    #     pip install -r ${{ github.workspace }}/requirements.txt --upgrade
    #     conan user
    #     conan --version
    #     conan profile new default --detect





  # Clang:
  #   runs-on: ${{ matrix.config.os }}
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       build_type: [Release, Debug]
  #       config:
  #         - { os: macos-13, xcode_ver: "15.0-beta", fea_ver: "-DFEA_CPP20=On" } # tbd, xcode has bad c++ support
  #         - { os: macos-13, xcode_ver: "14.3.1", fea_ver: "-DFEA_CPP17=On" }
  #         - { os: macos-13, xcode_ver: "14.3.1", fea_ver: "-DFEA_CPP14=On" }
  #         - { os: macos-12, xcode_ver: "13.2.1", fea_ver: "-DFEA_CPP17=On" }
  #         - { os: macos-12, xcode_ver: "13.2.1", fea_ver: "-DFEA_CPP14=On" }

  #   steps:
  #   - name: Git Line Endings
  #     run: |
  #       git config --global core.autocrlf false

  #   - uses: actions/checkout@v2

  #   - name: Install XCode ${{ matrix.config.xcode_ver }}
  #     uses: maxim-lobanov/setup-xcode@v1
  #     with:
  #       xcode-version: "${{ matrix.config.xcode_ver }}"

  #   - name: Install Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7'
  #       architecture: 'x64' # optional, x86

  #   - name: Install Conan
  #     run: |
  #       python --version
  #       pip install -r ${{ github.workspace }}/requirements.txt --upgrade
  #       conan user
  #       conan --version
  #       conan profile new default --detect
  #       conan config install ${{ github.workspace }}/.github/settings.yml

  #   - name: Configure
  #     run: |
  #       export SDKROOT=$(xcodebuild -version -sdk macosx Path)
  #       export CPATH="$SDKROOT/usr/include"
  #       cd ${{ github.workspace }}
  #       mkdir build
  #       cd build
  #       cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.config.fea_ver }}

  #   - name: Build
  #     run: |
  #       cd ${{ github.workspace }}/build
  #       cmake --build . --config ${{ matrix.build_type }}

  #   - name: Test
  #     run: |
  #       cd ${{ github.workspace }}/build
  #       ./bin/fea_libs_tests
  #       ./bin/fea_libs_nothrow_tests


  # Gcc:
  #   runs-on: ${{ matrix.config.os }}
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       build_type: [Release, Debug]
  #       # build_arch: [x64, x86]
  #       config:
  #         - { os: ubuntu-22.04, gcc_ver: "12", fea_ver: "-DFEA_CPP20=On" } # bad c++20 support?
  #         - { os: ubuntu-20.04, gcc_ver: "11", fea_ver: "-DFEA_CPP20=On" } # pretty bad c++20 support
  #         - { os: ubuntu-20.04, gcc_ver: "10", fea_ver: "-DFEA_CPP17=On" }
  #         - { os: ubuntu-20.04, gcc_ver: "10", fea_ver: "-DFEA_CPP14=On" }
  #         - { os: ubuntu-20.04, gcc_ver: "9", fea_ver: "-DFEA_CPP17=On" }
  #         - { os: ubuntu-20.04, gcc_ver: "9", fea_ver: "-DFEA_CPP14=On" }
  #         # - { os: ubuntu-18.04, gcc_ver: "7", fea_ver: "-DFEA_CPP14=On" }

  #   steps:
  #   - name: Git Line Endings
  #     run: |
  #       git config --global core.autocrlf false

  #   - uses: actions/checkout@v2

  #   - name: Install Gcc
  #     uses: egor-tensin/setup-gcc@v1
  #     with:
  #       version: ${{ matrix.config.gcc_ver }}
  #       platform: ${{ matrix.build_arch }}

  #   - name: Install Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7'
  #       architecture: 'x64' # optional, x86

  #   - name: Install Conan
  #     env:
  #       CC: gcc-${{ matrix.config.gcc_ver }}
  #       CXX: g++-${{ matrix.config.gcc_ver }}
  #     run: |
  #       python --version
  #       pip install -r ${{ github.workspace }}/requirements.txt --upgrade
  #       conan user
  #       conan --version
  #       conan profile new default --detect
  #       conan profile update settings.compiler.libcxx=libstdc++11 default

  #   - name: Configure
  #     env:
  #       CC: gcc-${{ matrix.config.gcc_ver }}
  #       CXX: g++-${{ matrix.config.gcc_ver }}
  #     run: |
  #       cd ${{ github.workspace }}
  #       mkdir build
  #       cd build
  #       cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.config.fea_ver }}

  #   - name: Build
  #     run: |
  #       cd ${{ github.workspace }}/build
  #       cmake --build . --config ${{ matrix.build_type }}

  #   - name: Test
  #     run: |
  #       cd ${{ github.workspace }}/build
  #       ./bin/fea_libs_tests
  #       ./bin/fea_libs_nothrow_tests